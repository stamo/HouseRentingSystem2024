@using Microsoft.AspNetCore.Identity
@using HouseRentingSystem.Infrastructure.Data.Models
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@inject IAgentService agentService

@{
    string userName = string.Empty;

    if (SignInManager.IsSignedIn(User))
    {
        var user = await UserManager.FindByIdAsync(User.Id());
        userName = $"{user.FirstName} {user.LastName}";
    }
}

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        if (await agentService.ExistsByIdAsync(User.Id()) == false)
        {
            <li class="nav-item">
                <a class="nav-link text-dark" asp-area="" asp-controller="Agent" asp-action="Become">Become Agent</a>
            </li>
        }
        
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @userName!</a>
        </li>
        <li class="nav-item">
            <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button type="submit" class="nav-link btn btn-link text-dark">Logout</button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register">Register</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">Login</a>
        </li>
    }
</ul>
